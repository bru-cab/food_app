"""Add sharing and creator fields to FoodReference

Revision ID: 7b9587795ba8
Revises: 
Create Date: 2025-03-30 20:58:56.653108

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision = '7b9587795ba8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # Create table if it doesn't exist
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    if not inspector.has_table('food_reference'):
        op.create_table('food_reference',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.String(100), nullable=False),
            sa.Column('brand', sa.String(100), nullable=False, server_default='Generic'),
            sa.Column('calories', sa.Float(), nullable=False),
            sa.Column('energy_kj', sa.Float(), nullable=False),
            sa.Column('protein', sa.Float(), nullable=False),
            sa.Column('carbs', sa.Float(), nullable=False),
            sa.Column('sugars', sa.Float(), nullable=False),
            sa.Column('fat', sa.Float(), nullable=False),
            sa.Column('saturated_fat', sa.Float(), nullable=False),
            sa.Column('sodium', sa.Float(), nullable=False),
            sa.Column('fiber', sa.Float(), nullable=False),
            sa.Column('fruits_veg_nuts', sa.Float(), nullable=False),
            sa.Column('nutri_score', sa.String(1), nullable=False),
            sa.Column('numeric_score', sa.Integer(), nullable=False),
            sa.Column('simple_score', sa.Integer(), nullable=False),
            sa.Column('is_shared', sa.Boolean(), nullable=False, server_default='false'),
            sa.Column('creator_id', sa.Integer(), nullable=False),
            sa.PrimaryKeyConstraint('id'),
            sa.ForeignKeyConstraint(['creator_id'], ['user.id'])
        )
    else:
        # Add new columns if table exists
        with op.batch_alter_table('food_reference', schema=None) as batch_op:
            if 'is_shared' not in inspector.get_columns('food_reference'):
                batch_op.add_column(sa.Column('is_shared', sa.Boolean(), nullable=False, server_default='false'))
            if 'creator_id' not in inspector.get_columns('food_reference'):
                batch_op.add_column(sa.Column('creator_id', sa.Integer(), nullable=False))
                batch_op.create_foreign_key(None, 'user', ['creator_id'], ['id'])
            # Drop unique constraint if it exists
            for constraint in inspector.get_unique_constraints('food_reference'):
                if constraint['name'] == 'food_reference_name_key':
                    batch_op.drop_constraint('food_reference_name_key', type_='unique')
                    break


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('food_reference', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_unique_constraint('food_reference_name_key', ['name'])
        batch_op.drop_column('creator_id')
        batch_op.drop_column('is_shared')
    # ### end Alembic commands ###
